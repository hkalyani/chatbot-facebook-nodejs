{
      function handleApiAiAction(sender, action, responseText, contexts, parameters) {
      	switch (action) {
          case "detailed-application":
      		  if (isDefined(contexts[0]) && contexts[0].name =='job_application' && contexts[0].parameters) {
               let phone_number = (isDefined(contexts[0].parameter['phone_number'])
      				 && contexts[0].parameters['phone_number']! ='') ? contexts[0].parameters['phone_number']:'';
      				 let user_name = (isDefined(contexts[0].parameter['user-name'])
      				 && contexts[0].parameters['user-name']! ='') ? contexts[0].parameters['user-name']:'';
      				 let previous_job = (isDefined(contexts[0].parameter['previous-job'])
      				 && contexts[0].parameters['previous-job']! ='') ? contexts[0].parameters['previous-job']:'';
      				 let years_of_experience = (isDefined(contexts[0].parameter['years-of-experience'])
      				 && contexts[0].parameters['years-of-experience']! ='') ? contexts[0].parameters['years-of-experience']:'';
      				 let employment_type = (isDefined(contexts[0].parameter['employment-type'])
      				 && contexts[0].parameters['employment-type']! ='') ? contexts[0].parameters['employment-type']:'';
      				 let education_details = (isDefined(contexts[0].parameter['education-details'])
      				 && contexts[0].parameters['education-details']! ='') ? contexts[0].parameters['education-details']:'';
      				 let compensation_details = (isDefined(contexts[0].parameter['compensation-details'])
      				 && contexts[0].parameters['compensation-details']! ='') ? contexts[0].parameters['compensation-details']:'';
      				 let job_vacancy = (isDefined(contexts[0].parameter['job-vacancy'])
      				 && contexts[0].parameters['job-vacancy']! ='') ? contexts[0].parameters['job-vacancy']:'';

      				 if (phone_number != '' && user_name != '' && previous_job != '' && years_of_experience != '' && employment_type != ''
      				 && education_details != '' && compensation_details != '' && job_vacancy != '') {
      				   let emailContent = 'A new job enquiery from' +user_name+ 'for the job:'+ job_vacancy +
      					          '.<br> previous job position:' +previous_job + '.'+
      					          '.<br> years of experience:' + years_of_experience + '.'+
      					          '.<br> phone number:' + phone_number + '.'+
      					          '.<br> employment type:' + employment_type + '.'+
      					          '.<br> education details:' + education_details + '.'+
      					          '.<br> compensation details:' + compensation_details + '.'+

      					 sendEmail('New job application', emailcontent);
      			}
      			sendTextMessage(sender, responseText);











#sendgrid code

function sendEmail(subject, content) {
	var helper = require('sendgrid') .mail;
	var from_email = new helper. Email(config.EMAIL_FROM);
	var to_email = new helper. Emai(config.EMAIL_TO)
	var subject = subject;
	var content = new helper. Content("text/html", content);
  var mail = new helper. Mail(from_email, subject, to_email, content);

	var sg = require('sendgrid')(config.SENDRID_API_KEY);
  var request = sg.emptyRequest({
	method: 'post',
	path: '/v3/mail/send',
	body: mail.toJSON()
});

sg.API(request, function(error,response) {
	console.log(response.statusCode)
	console.log(response.body)
	console.log(response.headers)

})

}
